{"version":3,"sources":["components/UI/Card.js","components/ExpensesFilter/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","data","target","onLoadDataFromFilter","ExpenseDate","month","date","toLocaleDateString","year","getFullYear","day","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValue","dataPoints","dataPoint","totalMaxmim","max","ExpensesChart","chartDataPoints","filteredData","getMonth","Expenses","useState","filteredYear","setFilterredYear","filteredExpenses","filter","item","toString","dataFromFilter","ExpenseForm","changedTitle","setChangedTitle","changedAmount","setChangedAmount","changedDate","setChangedDate","onSubmit","preventDefault","inputData","Date","onLoadDataFromExpenseForm","onShowForm","type","min","step","onClick","NewExpense","isShowForm","setAddNewExpense","dataFromExpenseForm","random","onLoadDataFromNewExpense","INITIAL_EXPENSES","App","expenses","setExpenses","dataFromNewExpense","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"2ZAQeA,MANf,SAAcC,GACZ,IAAMC,EAAU,QAAUD,EAAME,UAEhC,OAAO,qBAAKA,UAAWD,EAAhB,SAA0BD,EAAMG,Y,OCqB1BC,G,MAtBQ,SAACJ,GAOtB,OACE,qBAAKE,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQG,MAAOL,EAAMM,SAAUC,SATD,SAACC,GAC/B,IAAMC,EAAOD,EAAME,OAAOL,MAC1BL,EAAMW,qBAAqBF,IAO3B,UACE,wBAAQJ,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4B,kBCJKO,MAbf,SAAqBZ,GACnB,IAAMa,EAAQb,EAAMc,KAAKC,mBAAmB,QAAS,CAAEF,MAAO,SACxDG,EAAOhB,EAAMc,KAAKG,cAClBC,EAAMlB,EAAMc,KAAKC,mBAAmB,QAAS,CAAEG,IAAK,YAC1D,OACE,sBAAKhB,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCW,IACtC,qBAAKX,UAAU,qBAAf,SAAqCc,IACrC,qBAAKd,UAAU,oBAAf,SAAoCgB,QCM3BC,MAZf,SAAqBnB,GACnB,OACE,eAAC,EAAD,CAAME,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaY,KAAMd,EAAMc,OACzB,qBAAIZ,UAAU,4BAAd,UACE,6BAAKF,EAAMoB,QACX,sBAAKlB,UAAU,sBAAf,UAAsCF,EAAMqB,OAA5C,iBCWOC,EAlBM,SAACtB,GACpB,OAA2B,IAAvBA,EAAMuB,MAAMC,OACP,oBAAItB,UAAU,0BAAd,gCAGP,oBAAIA,UAAU,gBAAd,SACGF,EAAMuB,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEN,MAAOM,EAAQN,MACfN,KAAMY,EAAQZ,KACdO,OAAQK,EAAQL,QAHXK,EAAQC,U,OCWRC,G,YApBE,SAAC5B,GAChB,IAAI6B,EAAgB,KAMpB,OAJI7B,EAAM8B,SAAW,IACnBD,EAAgBE,KAAKC,MAAOhC,EAAMK,MAAQL,EAAM8B,SAAY,KAAO,KAInE,sBAAK5B,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACV+B,MAAO,CAAEC,OAAQL,OAGrB,qBAAK3B,UAAU,mBAAf,SAAmCF,EAAMmC,aCGhCC,EAjBD,SAACpC,GACb,IAAMqC,EAAkBrC,EAAMsC,WAAWb,KAAI,SAACc,GAAD,OAAeA,EAAUlC,SAChEmC,EAAcT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IAChC,OACE,qBAAKnC,UAAU,QAAf,SACGF,EAAMsC,WAAWb,KAAI,SAACc,GAAD,OACpB,cAAC,EAAD,CAEElC,MAAOkC,EAAUlC,MACjB8B,MAAOI,EAAUJ,MACjBL,SAAUU,GAHLD,EAAUJ,aCgBVO,EAxBO,SAAC1C,GACrB,IAD+B,EACzB2C,EAAkB,CACtB,CAAER,MAAO,MAAO9B,MAAO,GACvB,CAAE8B,MAAO,MAAO9B,MAAO,GACvB,CAAE8B,MAAO,MAAO9B,MAAO,GACvB,CAAE8B,MAAO,MAAO9B,MAAO,GACvB,CAAE8B,MAAO,MAAO9B,MAAO,GACvB,CAAE8B,MAAO,MAAO9B,MAAO,GACvB,CAAE8B,MAAO,MAAO9B,MAAO,GACvB,CAAE8B,MAAO,MAAO9B,MAAO,GACvB,CAAE8B,MAAO,MAAO9B,MAAO,GACvB,CAAE8B,MAAO,MAAO9B,MAAO,GACvB,CAAE8B,MAAO,MAAO9B,MAAO,GACvB,CAAE8B,MAAO,MAAO9B,MAAO,IAbM,cAgBVL,EAAM4C,cAhBI,IAgBhC,2BAA0C,CAAC,IAAhClB,EAA+B,QAEvCiB,EADsBjB,EAAQZ,KAAK+B,YACJxC,OAASqB,EAAQL,QAlBnB,8BAqB/B,OAAO,cAAC,EAAD,CAAOiB,WAAYK,KCQbG,MAxBf,SAAkB9C,GAChB,MAAyC+C,mBAAS,QAAlD,mBAAOC,EAAP,KAAqBC,EAArB,KAKMC,EAAmBlD,EAAMS,KAAK0C,QAClC,SAACC,GAAD,OAAUA,EAAKtC,KAAKG,cAAcoC,aAAeL,KAGnD,OACE,8BACE,eAAC,EAAD,CAAM9C,UAAU,WAAhB,UACE,cAAC,EAAD,CACEI,SAAU0C,EACVrC,qBAbe,SAAC2C,GACtBL,EAAiBK,MAcb,cAAC,EAAD,CAAeV,aAAcM,IAC7B,cAAC,EAAD,CAAc3B,MAAO2B,U,OCwDdK,G,YA9EK,SAACvD,GACnB,MAAwC+C,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAA0CV,mBAAS,IAAnD,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAAsCZ,mBAAS,IAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KAiCA,OACE,uBAAMC,SApBc,SAACtD,GACrBA,EAAMuD,iBACN,IAAMC,EAAY,CAChB5C,MAAOoC,EACP1C,KAAM,IAAImD,KAAKL,GACfvC,QAASqC,GAEXD,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,IAEf7D,EAAMkE,0BAA0BF,GAChChE,EAAMmE,cAQN,UACE,sBAAKjE,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACEkE,KAAK,OACL/D,MAAOmD,EACPjD,SAvCgB,SAACC,GACzBiD,EAAgBjD,EAAME,OAAOL,aAyCzB,sBAAKH,UAAU,uBAAf,UACE,2CACA,uBACEkE,KAAK,SACL/D,MAAOqD,EACPnD,SA3CiB,SAACC,GAC1BmD,EAAiBnD,EAAME,OAAOL,QA2CtBgE,IAAI,OACJC,KAAK,YAGT,sBAAKpE,UAAU,uBAAf,UACE,yCACA,uBACEkE,KAAK,OACL/D,MAAOuD,EACPrD,SAjDe,SAACC,GACxBqD,EAAerD,EAAME,OAAOL,QAiDpBgE,IAAI,aACJ5B,IAAI,qBAIV,sBAAKvC,UAAU,uBAAf,UACE,wBAAQkE,KAAK,SAASG,QArCH,WACvBvE,EAAMmE,cAoCF,oBAGA,yDCtCOK,EAjCI,SAACxE,GAClB,MAAuC+C,oBAAS,GAAhD,mBAAO0B,EAAP,KAAmBC,EAAnB,KAiBA,OACE,sBAAKxE,UAAU,cAAf,WACIuE,GACA,wBAAQF,QAXW,WACvBG,GAAiB,IAUb,6BAEDD,GACC,cAAC,EAAD,CACEP,0BAvBS,SAACS,GAChB,IAAMlE,EAAI,2BACLkE,GADK,IAERhD,GAAII,KAAK6C,SAASvB,aAEpBrD,EAAM6E,yBAAyBpE,IAmBzB0D,WAZgB,WACtBO,GAAiB,UCffI,EAAmB,CACvB,CACEnD,GAAI,KACJP,MAAO,eACPC,OAAQ,MACRP,KAAM,IAAImD,KAAK,KAAM,EAAG,KAE1B,CAAEtC,GAAI,KAAMP,MAAO,SAAUC,OAAQ,OAAQP,KAAM,IAAImD,KAAK,KAAM,EAAG,KACrE,CACEtC,GAAI,KACJP,MAAO,gBACPC,OAAQ,OACRP,KAAM,IAAImD,KAAK,KAAM,EAAG,KAE1B,CACEtC,GAAI,KACJP,MAAO,oBACPC,OAAQ,IACRP,KAAM,IAAImD,KAAK,KAAM,EAAG,MAmBbc,MAff,WACE,MAAgChC,mBAAS+B,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KAMA,OACE,gCACE,cAAC,EAAD,CAAYJ,yBANC,SAACK,GAChBD,GAAY,SAACE,GAAD,OAAmBD,GAAnB,mBAA0CC,UAMpD,cAAC,EAAD,CAAU1E,KAAMuE,QC/BtBI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.205216c9.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const selectInputChangedHandler = (event) => {\r\n        const data = event.target.value;\r\n        props.onLoadDataFromFilter(data);\r\n    }\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={selectInputChangedHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleDateString(\"en-US\", { month: \"long\" });\r\n  const year = props.date.getFullYear();\r\n  const day = props.date.toLocaleDateString(\"en-US\", { day: \"2-digit\" });\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <li className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">{props.amount} rub</div>\r\n      </li>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          date={expense.date}\r\n          amount={expense.amount}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointsValue = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaxmim = Math.max(...dataPointsValue);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          label={dataPoint.label}\r\n          maxValue={totalMaxmim}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n for (const expense of props.filteredData) {\r\n    const expensesMonth = expense.date.getMonth();\r\n    chartDataPoints[expensesMonth].value += expense.amount;\r\n }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\r\nimport { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilterredYear] = useState(\"2020\");\r\n  const loadDataFilter = (dataFromFilter) => {\r\n    setFilterredYear(dataFromFilter);\r\n  };\r\n\r\n  const filteredExpenses = props.data.filter(\r\n    (item) => item.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onLoadDataFromFilter={loadDataFilter}\r\n        />\r\n        <ExpensesChart filteredData={filteredExpenses}/>\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [changedTitle, setChangedTitle] = useState(\"\");\r\n  const [changedAmount, setChangedAmount] = useState(\"\");\r\n  const [changedDate, setChangedDate] = useState(\"\");\r\n\r\n  const titleInputHandler = (event) => {\r\n    setChangedTitle(event.target.value);\r\n  };\r\n\r\n  const amountInputHandler = (event) => {\r\n    setChangedAmount(event.target.value);\r\n  };\r\n\r\n  const dateInputHandler = (event) => {\r\n    setChangedDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const inputData = {\r\n      title: changedTitle,\r\n      date: new Date(changedDate),\r\n      amount: +changedAmount,\r\n    };\r\n    setChangedTitle(\"\");\r\n    setChangedAmount(\"\");\r\n    setChangedDate(\"\");\r\n\r\n    props.onLoadDataFromExpenseForm(inputData);\r\n    props.onShowForm();\r\n  };\r\n\r\n  const cancelBtnHandler = () => {\r\n    props.onShowForm();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={changedTitle}\r\n            onChange={titleInputHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={changedAmount}\r\n            onChange={amountInputHandler}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={changedDate}\r\n            onChange={dateInputHandler}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={cancelBtnHandler}>\r\n          Cancel\r\n        </button>\r\n        <button>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isShowForm, setAddNewExpense] = useState(false);\r\n  const loadData = (dataFromExpenseForm) => {\r\n    const data = {\r\n      ...dataFromExpenseForm,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onLoadDataFromNewExpense(data);\r\n  };\r\n\r\n  const addNewBtnHandler = () => {\r\n    setAddNewExpense(true);\r\n  };\r\n\r\n  const showFormHandler = () => {\r\n    setAddNewExpense(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isShowForm && (\r\n        <button onClick={addNewBtnHandler}>Add New Expense</button>\r\n      )}\r\n      {isShowForm && (\r\n        <ExpenseForm\r\n          onLoadDataFromExpenseForm={loadData}\r\n          onShowForm={showFormHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { useState } from \"react\";\n\nconst INITIAL_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\n\n  const loadData = (dataFromNewExpense) => {\n    setExpenses((prevExpenses) => [dataFromNewExpense, ...prevExpenses]);\n  };\n\n  return (\n    <div>\n      <NewExpense onLoadDataFromNewExpense={loadData} />\n      <Expenses data={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}